name: Contextive per Runtime Publish
on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string
      dotnet_runtime:
        required: true
        type: string
      os:
        required: true
        type: string
      vsce_platform:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
      VSCE_PAT:
        required: true

  
env:
  dotnet-version: '8.0.x'
  
jobs:
  get-matrix:
    uses: ./.github/workflows/get-matrix.yml
    with:
      matrix-path: .github/release-matrix.yml

  language-server:
    name: Language Server
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet

      - name: Build
        id: build
        run: dotnet fsi language-server/build.fsx -- -r ${{ inputs.dotnet_runtime }} --release ${{ inputs.release }}
        working-directory: src
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  vscode:
    name: VsCode Extension
    needs:
      - language-server
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build
        id: build
        run: dotnet fsi vscode/build.fsx -- -r ${{ inputs.dotnet_runtime }} --release ${{ inputs.release }} --vsce-platform ${{ inputs.vsce_platform }}
        working-directory: src
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

  publish-visualstudio:
    name: Visual Studio Extension
    if: ${{ inputs.os == 'windows-latest' }}
    needs:
      - language-server
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet

      - name: Language Server Artifact
        uses: actions/download-artifact@v4
        with:
          name: Contextive.LanguageServer-${{ inputs.dotnet_runtime }}
          path: src

      - name: Build
        id: build
        run: dotnet fsi visualstudio/build.fsx -- -r ${{ inputs.dotnet_runtime }} --release ${{ inputs.release }} 
        working-directory: src
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}